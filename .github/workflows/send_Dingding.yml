name: Send DingTalk Notification

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '50 7 * * *'  # 每天7:50运行

jobs:
  send-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          pip install requests
          
      - name: Create Python script
        run: |
          cat > send_notification.py << 'EOL'
import os
import json
import requests
import hmac
import hashlib
import base64
import urllib.parse
import datetime

def send_to_dingtalk(content):
    access_token = os.getenv("DINGTALK_ACCESS_TOKEN")
    secret = os.getenv("DINGTALK_SECRET")
    timestamp = str(round(datetime.datetime.now().timestamp() * 1000))
    string_to_sign = f"{timestamp}\n{secret}"
    hmac_code = hmac.new(secret.encode(), string_to_sign.encode(), digestmod=hashlib.sha256).digest()
    sign = urllib.parse.quote_plus(base64.b64encode(hmac_code))
    webhook = f"https://oapi.dingtalk.com/robot/send?access_token={access_token}&timestamp={timestamp}&sign={sign}"
    message = {
        "msgtype": "markdown",
        "markdown": {
            "title": "📢 微信公众号安全漏洞文章每日更新",
            "text": content
        }
    }
    response = requests.post(webhook, json=message)
    print("钉钉通知发送成功" if response.status_code == 200 else f"钉钉通知发送失败: {response.text}")

def get_today_updates():
    with open("README.md", "r", encoding="utf-8") as f:
        content = f.read()
    
    today = datetime.datetime.now().strftime("%Y-%m-%d")
    start_marker = f"### 📅 {today}"
    end_marker = "### 📅"
    
    start_idx = content.find(start_marker)
    if start_idx == -1:
        return "## 📢 今日更新提醒\n\n> 今日暂无新文章更新"
    
    end_idx = content.find(end_marker, start_idx + len(start_marker))
    today_content = content[start_idx:] if end_idx == -1 else content[start_idx:end_idx]
    
    lines = today_content.split("\n")
    formatted_content = ["## 📢 今日更新提醒\n"]
    
    for line in lines:
        if line.startswith("#### 📚 新增文章"):
            formatted_content.append("\n### 📚 新增文章\n")
        elif line.startswith("#### 📊 统计信息"):
            formatted_content.append("\n### 📊 统计信息\n")
        elif line.strip().startswith(("1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.")):
            formatted_content.append(f"> 🔹 {line}")
        elif line.strip().startswith("- 原文链接") or line.strip().startswith("- GitHub备份"):
            formatted_content.append(f"> 📎 {line}")
        elif line.startswith("- 新增文章数"):
            formatted_content.append(f"> 📈 {line[1:].strip()}")
        elif line.startswith("- 更新时间"):
            formatted_content.append(f"> ⏰ {line[1:].strip()}")
    
    formatted_content.append("\n---\n> 💡 更多详情请访问GitHub仓库")
    return "\n".join(formatted_content)

if __name__ == "__main__":
    send_to_dingtalk(get_today_updates())
EOL
          
      - name: Send DingTalk Notification
        env:
          DINGTALK_ACCESS_TOKEN: ${{ secrets.DINGTALK_ACCESS_TOKEN }}
          DINGTALK_SECRET: ${{ secrets.DINGTALK_SECRET }}
        run: |
          python send_notification.py 
